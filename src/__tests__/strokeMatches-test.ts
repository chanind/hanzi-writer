import strokeMatches from '../strokeMatches';
import Stroke from '../models/Stroke';
import UserStroke from '../models/UserStroke';
import { Point } from '../typings/types';
import Character from '../models/Character';

const getChar = (charStr: string): Character => {
  // eslint-disable-next-line @typescript-eslint/no-var-requires
  const charJson = require(`hanzi-writer-data/${charStr}.json`);
  return Character.fromObject(charStr, charJson);
};

const assertMatches = (
  charStr: string,
  strokeNum: number,
  points: Point[],
  options = {},
) => {
  const char = getChar(charStr);
  const userStroke = { points } as any;
  expect(strokeMatches(userStroke, char, strokeNum, options).isMatch).toBe(true);
};

const assertNotMatches = (
  charStr: string,
  strokeNum: number,
  points: Point[],
  options = {},
) => {
  const char = getChar(charStr);
  const userStroke = { points } as any;
  expect(strokeMatches(userStroke, char, strokeNum, options).isMatch).toBe(false);
};

describe('strokeMatches', () => {
  it('does not match if the user stroke is a single point', () => {
    const stroke = new Stroke(
      '',
      [
        { x: 0, y: 0 },
        { x: 10, y: 50 },
      ],
      0,
    );

    const userStroke = new UserStroke(1, { x: 2, y: 1 }, { x: 9999, y: 9999 });

    expect(strokeMatches(userStroke, new Character('X', [stroke]), 0)).toEqual({
      isMatch: false,
      meta: { isStrokeBackwards: false },
    });
  });

  it('matches if the user stroke roughly matches the stroke medians', () => {
    const stroke = new Stroke(
      '',
      [
        { x: 0, y: 0 },
        { x: 10, y: 50 },
      ],
      0,
    );

    const userStroke = new UserStroke(1, { x: 2, y: 1 }, { x: 9999, y: 9999 });
    userStroke.appendPoint({ x: 5, y: 25 }, { x: 9999, y: 9999 });
    userStroke.appendPoint({ x: 10, y: 51 }, { x: 9999, y: 9999 });

    expect(strokeMatches(userStroke, new Character('X', [stroke]), 0)).toEqual({
      isMatch: true,
      meta: { isStrokeBackwards: false },
    });
  });

  it('does not match if the user stroke is in the wrong direction', () => {
    const stroke = new Stroke(
      '',
      [
        { x: 0, y: 0 },
        { x: 10, y: 50 },
      ],
      0,
    );

    const userStroke = new UserStroke(1, { x: 10, y: 51 }, { x: 9999, y: 9999 });
    userStroke.appendPoint({ x: 5, y: 25 }, { x: 9999, y: 9999 });
    userStroke.appendPoint({ x: 2, y: 1 }, { x: 9999, y: 9999 });

    expect(strokeMatches(userStroke, new Character('X', [stroke]), 0)).toEqual({
      isMatch: false,
      meta: { isStrokeBackwards: true },
    });
  });

  it('does not match if the user stroke is too far away', () => {
    const stroke = new Stroke(
      '',
      [
        { x: 0, y: 0 },
        { x: 10, y: 50 },
      ],
      0,
    );

    const userStroke = new UserStroke(
      1,
      { x: 2 + 200, y: 1 + 200 },
      { x: 9999, y: 9999 },
    );
    userStroke.appendPoint({ x: 5 + 200, y: 25 + 200 }, { x: 9999, y: 9999 });
    userStroke.appendPoint({ x: 10 + 200, y: 51 + 200 }, { x: 9999, y: 9999 });

    expect(strokeMatches(userStroke, new Character('X', [stroke]), 0)).toEqual({
      isMatch: false,
      meta: { isStrokeBackwards: false },
    });
  });

  it('is more lenient depending on how large leniency is', () => {
    const stroke = new Stroke(
      '',
      [
        { x: 0, y: 0 },
        { x: 10, y: 50 },
      ],
      0,
    );

    const userStroke = new UserStroke(
      1,
      { x: 2 + 200, y: 1 + 200 },
      { x: 9999, y: 9999 },
    );
    userStroke.appendPoint({ x: 5 + 200, y: 25 + 200 }, { x: 9999, y: 9999 });
    userStroke.appendPoint({ x: 10 + 200, y: 51 + 200 }, { x: 9999, y: 9999 });

    expect(
      strokeMatches(userStroke, new Character('X', [stroke]), 0, { leniency: 0.2 }),
    ).toEqual({ isMatch: false, meta: { isStrokeBackwards: false } });
    expect(
      strokeMatches(userStroke, new Character('X', [stroke]), 0, { leniency: 20 }),
    ).toEqual({ isMatch: true, meta: { isStrokeBackwards: false } });
  });

  it('matches using real data 1', () => {
    assertMatches('人', 0, [
      { x: 409.6, y: 153.6 },
      { x: 409.6, y: 153.6 },
      { x: 409.6, y: 153.6 },
      { x: 409.6, y: 156.4 },
      { x: 409.6, y: 165 },
      { x: 409.6, y: 176.4 },
      { x: 406.8, y: 190.58 },
      { x: 401.1, y: 204.8 },
      { x: 395.4, y: 224.7 },
      { x: 392.5, y: 241.83 },
      { x: 384, y: 264.5 },
      { x: 378.3, y: 284.4 },
      { x: 372.6, y: 307.2 },
      { x: 366.94, y: 329.9 },
      { x: 358.4, y: 352.7 },
      { x: 347.1, y: 384 },
      { x: 338.5, y: 401.1 },
      { x: 335.64, y: 412.4 },
      { x: 329.9, y: 423.8 },
      { x: 324.3, y: 435.2 },
      { x: 318.6, y: 449.4 },
      { x: 312.9, y: 466.5 },
      { x: 304.36, y: 477.9 },
      { x: 295.8, y: 494.94 },
      { x: 290.1, y: 506.3 },
      { x: 287.3, y: 512 },
      { x: 275.9, y: 529.1 },
      { x: 273.1, y: 537.6 },
      { x: 267.4, y: 546.1 },
      { x: 261.7, y: 551.8 },
      { x: 258.8, y: 557.5 },
      { x: 256, y: 563.2 },
      { x: 253.2, y: 566.1 },
      { x: 247.5, y: 571.7 },
      { x: 244.63, y: 574.6 },
      { x: 241.8, y: 580.3 },
      { x: 236.1, y: 585.9 },
      { x: 233.24, y: 588.8 },
      { x: 227.64, y: 594.5 },
      { x: 224.7, y: 600.2 },
      { x: 219.1, y: 605.9 },
      { x: 210.58, y: 614.4 },
      { x: 204.8, y: 620.1 },
      { x: 196.3, y: 631.5 },
      { x: 193.42, y: 634.3 },
      { x: 182.04, y: 645.7 },
      { x: 173.5, y: 654.2 },
      { x: 167.82, y: 662.8 },
      { x: 164.9, y: 665.6 },
      { x: 156.4, y: 674.1 },
      { x: 147.9, y: 679.8 },
      { x: 142.23, y: 685.5 },
      { x: 139.4, y: 688.4 },
      { x: 130.8, y: 694.1 },
      { x: 122.3, y: 699.7 },
      { x: 119.5, y: 702.6 },
      { x: 113.8, y: 705.4 },
      { x: 110.94, y: 708.3 },
      { x: 105.24, y: 711.1 },
      { x: 99.66, y: 713.9 },
      { x: 93.9, y: 719.6 },
      { x: 88.18, y: 722.5 },
      { x: 82.5, y: 728.2 },
      { x: 76.8, y: 731.1 },
      { x: 71.11, y: 733.9 },
      { x: 68.3, y: 736.7 },
      { x: 65.42, y: 742.4 },
      { x: 62.6, y: 745.2 },
      { x: 56.9, y: 745.2 },
      { x: 56.9, y: 748.1 },
      { x: 54.1, y: 748.1 },
    ]);
  });

  it('matches using real data 2', () => {
    assertMatches('人', 1, [
      { x: 583.1, y: 384 },
      { x: 583.1, y: 384 },
      { x: 583.1, y: 384 },
      { x: 585.9, y: 386.8 },
      { x: 594.5, y: 398.23 },
      { x: 620.1, y: 426.6666666666667 },
      { x: 648.5, y: 463.64 },
      { x: 691.2, y: 512 },
      { x: 736.7, y: 566.1 },
      { x: 790.8, y: 620.1 },
      { x: 850.5, y: 682.6666666666666 },
      { x: 890.3, y: 719.6 },
      { x: 938.6666666666666, y: 762.3 },
      { x: 975.6, y: 790.8 },
      { x: 992.7, y: 802.1 },
      { x: 998.4, y: 804.9 },
      { x: 998.4, y: 804.9 },
    ]);
  });

  it('does not match using real data 1', () => {
    assertNotMatches('人', 0, [
      { x: 133.7, y: 304.4 },
      { x: 133.7, y: 304.4 },
      { x: 136.53, y: 304.4 },
      { x: 150.8, y: 304.4 },
      { x: 199.11, y: 304.4 },
      { x: 281.6, y: 304.4 },
      { x: 392.5, y: 304.4 },
      { x: 475.1, y: 304.4 },
      { x: 546.1, y: 304.4 },
      { x: 588.8, y: 304.4 },
      { x: 608.7, y: 304.4 },
      { x: 614.4, y: 304.4 },
      { x: 617.2, y: 304.4 },
      { x: 620.1, y: 304.4 },
      { x: 620.1, y: 304.4 },
      { x: 620.1, y: 304.4 },
      { x: 620.1, y: 304.4 },
    ]);
  });

  it('does not match using real data 2', () => {
    assertNotMatches('人', 0, [
      { x: 31.3, y: 614.4 },
      { x: 28.4, y: 614.4 },
      { x: 34.1, y: 611.6 },
      { x: 54.1, y: 597.3 },
      { x: 102.4, y: 566.1 },
      { x: 202, y: 506.3 },
      { x: 287.3, y: 449.4 },
      { x: 386.8, y: 384 },
      { x: 452.3, y: 344.2 },
      { x: 506.3, y: 315.75 },
      { x: 560.4, y: 287.3 },
      { x: 603.1, y: 264.5 },
      { x: 642.8444444444444, y: 241.83 },
      { x: 676.9, y: 221.9 },
      { x: 705.4, y: 207.6 },
      { x: 719.6, y: 201.92 },
      { x: 725.3333333333334, y: 199.1 },
      { x: 728.2, y: 196.3 },
      { x: 733.9, y: 193.42 },
      { x: 733.9, y: 193.42 },
    ]);
  });

  it('does not match using real data 3', () => {
    assertNotMatches('人', 0, [
      { x: 395.4, y: 187.7 },
      { x: 395.4, y: 187.7 },
      { x: 395.4, y: 196.3 },
      { x: 395.4, y: 207.6 },
      { x: 395.4, y: 213.3 },
      { x: 392.5, y: 227.6 },
      { x: 386.8, y: 241.8 },
      { x: 384, y: 253.2 },
      { x: 381.2, y: 264.5 },
      { x: 378.3, y: 273 },
      { x: 375.5, y: 278.8 },
      { x: 372.6, y: 284.4 },
      { x: 372.6, y: 284.4 },
      { x: 372.6, y: 287.3 },
      { x: 369.8, y: 287.3 },
      { x: 369.8, y: 287.3 },
    ]);
  });

  it('does not match using real data 4', () => {
    assertNotMatches('人', 0, [
      { x: 961.4, y: 219 },
      { x: 961.4, y: 219 },
      { x: 961.4, y: 219 },
      { x: 961.4, y: 221.9 },
      { x: 961.4, y: 224.7 },
      { x: 961.4, y: 230.4 },
      { x: 955.7, y: 244.6 },
      { x: 952.9, y: 261.7 },
      { x: 944.4, y: 284.4 },
      { x: 935.8, y: 312.9 },
      { x: 924.4, y: 344.2 },
      { x: 913.1, y: 375.5 },
      { x: 896, y: 426.6666666666667 },
      { x: 881.8, y: 472.2 },
      { x: 873.2, y: 506.3 },
      { x: 864.7, y: 531.911111111111 },
      { x: 844.8, y: 594.5 },
      { x: 836.3, y: 631.5 },
      { x: 822.1, y: 668.4 },
      { x: 810.6666666666666, y: 696.9 },
      { x: 802.1, y: 722.5 },
      { x: 790.8, y: 745.2 },
      { x: 782.2, y: 765.6 },
      { x: 773.7, y: 782.2 },
      { x: 765.6, y: 796.4 },
      { x: 756.6, y: 813.5111111111111 },
      { x: 750.9, y: 822.1 },
      { x: 745.2, y: 830.6 },
      { x: 742.4, y: 836.3 },
      { x: 739.6, y: 836.3 },
      { x: 739.6, y: 839.1 },
      { x: 739.6, y: 839.1 },
      { x: 736.7, y: 839.1 },
      { x: 736.7, y: 839.1 },
      { x: 736.7, y: 839.1 },
      { x: 733.9, y: 839.1 },
      { x: 733.9, y: 839.1 },
      { x: 733.9, y: 839.1 },
      { x: 733.9, y: 839.1 },
      { x: 733.9, y: 836.3 },
      { x: 733.9, y: 836.3 },
      { x: 733.9, y: 836.3 },
      { x: 733.9, y: 833.4 },
      { x: 733.9, y: 833.4 },
    ]);
  });

  it('matches using real data 5', () => {
    assertMatches('国', 1, [
      { x: 337.2, y: 183 },
      { x: 347.5, y: 183 },
      { x: 378.2, y: 183 },
      { x: 408.9, y: 179.6 },
      { x: 484, y: 179.6 },
      { x: 521.6, y: 176.2 },
      { x: 600.1, y: 162.5 },
      { x: 695.6, y: 148.9 },
      { x: 740, y: 138.6 },
      { x: 852.7, y: 135.2 },
      { x: 907.3, y: 135.2 },
      { x: 931.2, y: 135.2 },
      { x: 955.1, y: 152.3 },
      { x: 958.5, y: 159.1 },
      { x: 958.5, y: 183 },
      { x: 958.5, y: 203.5 },
      { x: 958.5, y: 230.8 },
      { x: 958.5, y: 271.8 },
      { x: 927.7, y: 343.4 },
      { x: 927.7, y: 343.4 },
      { x: 924.3, y: 442.4 },
      { x: 866.3, y: 647.2 },
      { x: 866.3, y: 691.6 },
      { x: 866.3, y: 800.8 },
      { x: 866.3, y: 845.2 },
      { x: 849.2, y: 903.2 },
      { x: 842.4, y: 978.3 },
      { x: 839, y: 992 },
      { x: 828.8, y: 1005.6 },
    ]);
  });

  it('matches using real data 6', () => {
    const points = [
      { x: 412.3, y: 476.6 },
      { x: 463.5, y: 476.6 },
      { x: 501.1, y: 476.6 },
      { x: 518.1, y: 476.6 },
      { x: 528.4, y: 476.6 },
      { x: 562.5, y: 476.6 },
      { x: 576.2, y: 476.6 },
    ];
    assertNotMatches('国', 2, points, { isOutlineVisible: true });
    assertMatches('国', 3, points, { isOutlineVisible: true });
    assertNotMatches('国', 4, points, { isOutlineVisible: true });
    assertNotMatches('国', 5, points, { isOutlineVisible: true });
  });

  it('matches using real data 7', () => {
    const points = [
      { x: 197.3, y: 331.2 },
      { x: 201.1, y: 338.8 },
      { x: 348, y: 321 },
      { x: 557.8, y: 294.4 },
      { x: 768.2, y: 269.9 },
      { x: 840.5, y: 266.4 },
      { x: 807.1, y: 376 },
      { x: 722.1, y: 702.9 },
    ];
    assertNotMatches('中', 0, points);
    assertMatches('中', 1, points);
    assertNotMatches('中', 2, points);
  });

  it('matches using real data 8', () => {
    const points = [
      { x: 234.8, y: 466.6 },
      { x: 161.3, y: 574.5 },
      { x: 43.9, y: 780.3 },
    ];
    assertNotMatches('小', 0, points);
    assertMatches('小', 1, points);
    assertNotMatches('小', 2, points);
  });

  it('matches using real data 9', () => {
    const points = [
      { x: 618.7, y: 521.1 },
      { x: 659.7, y: 514.3 },
      { x: 704.1, y: 497.2 },
      { x: 717.7, y: 487 },
      { x: 758.7, y: 469.9 },
      { x: 772.3, y: 466.5 },
    ];
    assertNotMatches('谁', 5, points);
    assertMatches('谁', 6, points);
  });

  it('matches using real data 10', () => {
    const points = [
      { x: 239.8, y: 182.5 },
      { x: 263.7, y: 182.5 },
      { x: 403.7, y: 145 },
      { x: 441.2, y: 134.7 },
      { x: 499.3, y: 114.2 },
      { x: 509.5, y: 107.4 },
      { x: 512.9, y: 107.4 },
      { x: 489, y: 165.4 },
      { x: 472, y: 189.3 },
      { x: 441.2, y: 230.3 },
      { x: 424.2, y: 264.4 },
      { x: 410.5, y: 366.8 },
      { x: 390, y: 499.9 },
      { x: 355.9, y: 609.2 },
      { x: 352.5, y: 626.2 },
      { x: 345.7, y: 636.5 },
      { x: 342.2, y: 650.1 },
      { x: 335.4, y: 660.4 },
      { x: 335.4, y: 667.2 },
      { x: 325.2, y: 667.2 },
      { x: 321.8, y: 660.4 },
      { x: 274, y: 616 },
      { x: 239.8, y: 588.7 },
      { x: 226.2, y: 558 },
    ];
    assertMatches('那', 0, points);
    assertNotMatches('那', 1, points);
  });

  it('matches using real data 11', () => {
    const points = [
      { x: 40.7, y: 474.1 },
      { x: 47.6, y: 474.1 },
      { x: 163.6, y: 416 },
      { x: 194.3, y: 409.2 },
      { x: 303.6, y: 361.4 },
      { x: 344.5, y: 351.2 },
      { x: 347.9, y: 351.2 },
      { x: 347.9, y: 361.4 },
      { x: 303.6, y: 532.1 },
      { x: 255.8, y: 631.1 },
      { x: 248.9, y: 658.4 },
      { x: 228.5, y: 743.7 },
      { x: 225.1, y: 771 },
      { x: 225.1, y: 771 },
      { x: 228.5, y: 771 },
      { x: 293.3, y: 713 },
      { x: 310.4, y: 689.1 },
      { x: 351.3, y: 648.1 },
      { x: 382.1, y: 627.7 },
      { x: 392.3, y: 614 },
    ];
    assertNotMatches('语', 0, points);
    assertMatches('语', 1, points);
    assertNotMatches('语', 2, points);
  });

  it('matches using real data 12', () => {
    const points = [
      { x: 512, y: 164.3 },
      { x: 512, y: 167.8 },
      { x: 512, y: 167.8 },
      { x: 522.2, y: 167.8 },
      { x: 525.7, y: 164.3 },
      { x: 539.3, y: 160.9 },
      { x: 553, y: 157.5 },
      { x: 566.6, y: 150.7 },
      { x: 587.1, y: 147.3 },
      { x: 600.7, y: 143.9 },
      { x: 611, y: 140.4 },
      { x: 631.5, y: 140.4 },
      { x: 645.1, y: 137 },
      { x: 658.8, y: 137 },
      { x: 669, y: 137 },
      { x: 669, y: 137 },
      { x: 672.4, y: 137 },
      { x: 675.8, y: 137 },
      { x: 679.3, y: 137 },
      { x: 682.7, y: 137 },
      { x: 682.7, y: 140.4 },
      { x: 682.7, y: 143.9 },
      { x: 689.5, y: 147.3 },
      { x: 689.5, y: 150.7 },
      { x: 689.5, y: 157.5 },
      { x: 689.5, y: 157.5 },
      { x: 692.9, y: 160.9 },
      { x: 692.9, y: 164.3 },
      { x: 692.9, y: 171.2 },
      { x: 692.9, y: 178 },
      { x: 692.9, y: 191.6 },
      { x: 692.9, y: 208.7 },
      { x: 689.5, y: 225.8 },
      { x: 689.5, y: 236 },
      { x: 682.7, y: 263.3 },
      { x: 682.7, y: 280.4 },
      { x: 672.4, y: 300.9 },
      { x: 669, y: 321.4 },
      { x: 669, y: 335 },
      { x: 662.2, y: 348.7 },
      { x: 662.2, y: 362.3 },
      { x: 658.8, y: 376 },
      { x: 648.5, y: 382.8 },
      { x: 645.1, y: 396.4 },
      { x: 645.1, y: 396.4 },
      { x: 641.7, y: 399.9 },
    ];
    assertNotMatches('很', 2, points);
    assertMatches('很', 3, points);
    assertNotMatches('很', 4, points);
    assertNotMatches('很', 5, points);
    assertNotMatches('很', 6, points);
  });

  it('matches using real data 13', () => {
    const points = [
      { x: 325, y: 215.7 },
      { x: 325, y: 212.3 },
      { x: 328.4, y: 208.9 },
      { x: 331.8, y: 205.4 },
      { x: 366, y: 195.2 },
      { x: 403.5, y: 191.8 },
      { x: 461.5, y: 181.5 },
      { x: 533.2, y: 174.7 },
      { x: 604.9, y: 161.1 },
      { x: 697.1, y: 147.4 },
      { x: 741.4, y: 137.2 },
      { x: 765.3, y: 126.9 },
      { x: 775.6, y: 123.5 },
      { x: 779, y: 123.5 },
      { x: 782.4, y: 120.1 },
      { x: 789.2, y: 120.1 },
      { x: 799.5, y: 120.1 },
      { x: 826.8, y: 120.1 },
      { x: 840.4, y: 120.1 },
      { x: 843.8, y: 120.1 },
      { x: 847.3, y: 123.5 },
      { x: 847.3, y: 126.9 },
      { x: 840.4, y: 137.2 },
      { x: 833.6, y: 150.8 },
      { x: 823.4, y: 157.7 },
      { x: 802.9, y: 174.7 },
      { x: 775.6, y: 198.6 },
      { x: 738, y: 215.7 },
    ];
    assertNotMatches('写', 0, points);
    assertMatches('写', 1, points);
    assertNotMatches('写', 2, points);
  });

  it('matches using real data 14', () => {
    const points = [
      { x: 55.4, y: 402.4 },
      { x: 62.2, y: 395.6 },
      { x: 96.3, y: 388.7 },
      { x: 195.3, y: 375.1 },
      { x: 280.6, y: 364.9 },
      { x: 362.6, y: 364.9 },
      { x: 434.2, y: 361.4 },
      { x: 502.5, y: 358 },
      { x: 560.5, y: 354.6 },
      { x: 591.3, y: 354.6 },
      { x: 604.9, y: 354.6 },
      { x: 608.3, y: 354.6 },
      { x: 615.1, y: 361.4 },
      { x: 615.1, y: 364.9 },
      { x: 615.1, y: 371.7 },
      { x: 615.1, y: 385.3 },
      { x: 615.1, y: 405.8 },
      { x: 615.1, y: 436.5 },
      { x: 601.5, y: 470.7 },
      { x: 584.4, y: 518.5 },
      { x: 567.4, y: 556 },
      { x: 546.9, y: 610.6 },
      { x: 526.4, y: 658.4 },
      { x: 502.5, y: 709.6 },
      { x: 492.3, y: 750.6 },
      { x: 482, y: 798.3 },
      { x: 482, y: 825.7 },
      { x: 485.4, y: 846.1 },
      { x: 495.7, y: 863.2 },
      { x: 512.7, y: 880.3 },
      { x: 543.5, y: 897.3 },
      { x: 601.5, y: 911 },
      { x: 676.6, y: 917.8 },
      { x: 758.5, y: 928.1 },
      { x: 826.8, y: 928.1 },
      { x: 874.6, y: 928.1 },
      { x: 918.9, y: 928.1 },
      { x: 942.8, y: 917.8 },
      { x: 963.3, y: 904.2 },
      { x: 977, y: 890.5 },
      { x: 987.2, y: 876.9 },
      { x: 990.6, y: 859.8 },
      { x: 990.6, y: 842.7 },
      { x: 990.6, y: 812 },
      { x: 990.6, y: 784.7 },
      { x: 990.6, y: 764.2 },
    ];
    assertNotMatches('九', 0, points);
    assertMatches('九', 1, points);
  });

  it('matches using real data 15', () => {
    const points = [
      { x: 455.1, y: 219 },
      { x: 455.1, y: 216.2 },
      { x: 458, y: 216.2 },
      { x: 463.6, y: 216.2 },
      { x: 483.6, y: 216.2 },
      { x: 503.5, y: 216.2 },
      { x: 531.9, y: 213.3 },
      { x: 563.2, y: 213.3 },
      { x: 594.5, y: 210.5 },
      { x: 620.1, y: 207.6 },
      { x: 637.2, y: 207.6 },
      { x: 648.5, y: 207.6 },
      { x: 657.1, y: 207.6 },
      { x: 662.8, y: 207.6 },
      { x: 662.8, y: 207.6 },
      { x: 665.6, y: 207.6 },
      { x: 665.6, y: 210.5 },
      { x: 665.6, y: 216.2 },
      { x: 665.6, y: 221.9 },
      { x: 665.6, y: 230.4 },
      { x: 665.6, y: 238.9 },
      { x: 662.8, y: 256 },
      { x: 659.9, y: 273.1 },
      { x: 648.5, y: 310 },
      { x: 640, y: 330 },
      { x: 634.3, y: 349.9 },
      { x: 628.6, y: 364.1 },
      { x: 622.9, y: 372.6 },
      { x: 620.1, y: 378.3 },
      { x: 617.2, y: 384 },
      { x: 617.2, y: 386.8 },
      { x: 617.2, y: 389.7 },
      { x: 617.2, y: 389.7 },
      { x: 622.9, y: 392.5 },
      { x: 628.6, y: 398.2 },
      { x: 637.2, y: 401.1 },
      { x: 642.8, y: 406.8 },
      { x: 645.7, y: 412.4 },
      { x: 648.5, y: 415.3 },
      { x: 651.4, y: 423.8 },
      { x: 651.4, y: 435.2 },
      { x: 654.2, y: 449.4 },
      { x: 654.2, y: 469.3 },
      { x: 654.2, y: 489.2 },
      { x: 648.5, y: 506.3 },
      { x: 640, y: 520.5 },
      { x: 625.8, y: 534.8 },
      { x: 597.3, y: 557.5 },
      { x: 571.7, y: 571.7 },
      { x: 551.8, y: 577.4 },
      { x: 531.9, y: 583.1 },
      { x: 526.2, y: 586 },
    ];
    assertMatches('阝', 0, points);
    assertNotMatches('阝', 1, points);
  });

  it('matches using real data 16', () => {
    const points = [
      { x: 386.8, y: 156.6 },
      { x: 390.3, y: 160 },
      { x: 407.3, y: 160 },
      { x: 424.4, y: 160 },
      { x: 441.5, y: 160 },
      { x: 458.5, y: 160 },
      { x: 479, y: 160 },
      { x: 496.1, y: 160 },
      { x: 516.6, y: 160 },
      { x: 530.2, y: 160 },
      { x: 540.4, y: 160 },
      { x: 550.7, y: 160 },
      { x: 564.3, y: 160 },
      { x: 574.6, y: 160 },
      { x: 581.4, y: 160 },
      { x: 588.2, y: 160 },
      { x: 595.1, y: 160 },
      { x: 598.5, y: 160 },
      { x: 605.3, y: 160 },
      { x: 612.1, y: 160 },
      { x: 619, y: 160 },
      { x: 625.8, y: 160 },
      { x: 632.6, y: 160 },
      { x: 639.4, y: 160 },
      { x: 639.4, y: 156.6 },
      { x: 642.8, y: 156.6 },
      { x: 646.3, y: 156.6 },
      { x: 646.3, y: 153.2 },
      { x: 649.7, y: 149.8 },
      { x: 653.1, y: 149.8 },
      { x: 659.9, y: 146.4 },
      { x: 663.3, y: 146.4 },
      { x: 666.7, y: 146.4 },
      { x: 666.7, y: 143 },
      { x: 666.7, y: 146.4 },
      { x: 666.7, y: 153.2 },
      { x: 666.7, y: 163.4 },
      { x: 666.7, y: 177.1 },
      { x: 666.7, y: 180.5 },
      { x: 666.7, y: 183.9 },
      { x: 666.7, y: 197.6 },
      { x: 663.3, y: 221.5 },
      { x: 659.9, y: 252.2 },
      { x: 656.5, y: 293.1 },
      { x: 653.1, y: 323.9 },
      { x: 649.7, y: 347.8 },
      { x: 649.7, y: 361.4 },
      { x: 649.7, y: 375.1 },
      { x: 649.7, y: 375.1 },
      { x: 646.3, y: 375.1 },
      { x: 646.3, y: 375.1 },
      { x: 642.8, y: 375.1 },
      { x: 639.4, y: 375.1 },
      { x: 636, y: 371.7 },
      { x: 636, y: 368.2 },
      { x: 632.6, y: 368.2 },
      { x: 632.6, y: 364.8 },
      { x: 629.2, y: 361.4 },
      { x: 629.2, y: 358 },
      { x: 619, y: 354.6 },
      { x: 608.7, y: 347.8 },
      { x: 598.5, y: 344.3 },
      { x: 584.8, y: 344.3 },
      { x: 574.6, y: 344.3 },
      { x: 564.3, y: 344.3 },
      { x: 554.1, y: 344.3 },
      { x: 547.3, y: 344.3 },
      { x: 537, y: 344.3 },
      { x: 526.8, y: 344.3 },
      { x: 516.6, y: 344.3 },
      { x: 509.7, y: 344.3 },
      { x: 499.5, y: 344.3 },
      { x: 489.2, y: 344.3 },
      { x: 479, y: 344.3 },
      { x: 468.8, y: 344.3 },
      { x: 465.4, y: 344.3 },
      { x: 461.9, y: 344.3 },
      { x: 458.5, y: 344.3 },
      { x: 455.1, y: 344.3 },
      { x: 451.7, y: 344.3 },
      { x: 444.9, y: 344.3 },
      { x: 438, y: 344.3 },
      { x: 427.8, y: 347.8 },
      { x: 417.6, y: 347.8 },
      { x: 417.6, y: 347.8 },
      { x: 414.2, y: 347.8 },
      { x: 410.7, y: 347.8 },
    ];
    assertNotMatches('弓', 0, points);
    assertNotMatches('弓', 1, points);
    assertNotMatches('弓', 2, points);
  });

  it('matches using real data 17', () => {
    const points = [
      { x: 526.6, y: 626.7 },
      { x: 526.6, y: 616.5 },
      { x: 506.1, y: 599.4 },
      { x: 495.8, y: 592.6 },
      { x: 465.1, y: 578.9 },
    ];
    assertNotMatches('犭', 0, points);
    assertNotMatches('犭', 1, points);
    assertNotMatches('犭', 2, points);
  });

  it('matches using real data 18', () => {
    const points = [
      { x: 553.9, y: 191.4 },
      { x: 547, y: 208.4 },
      { x: 540.2, y: 218.7 },
      { x: 540.2, y: 222.1 },
      { x: 540.2, y: 225.5 },
    ];
    assertNotMatches('犭', 0, points);
    assertNotMatches('犭', 1, points);
    assertNotMatches('犭', 2, points);
  });

  it('matches using real data 19', () => {
    const points = [
      { x: 139.5, y: 443.5 },
      { x: 142.9, y: 446.9 },
      { x: 146.3, y: 450.3 },
      { x: 149.7, y: 453.7 },
      { x: 163.4, y: 453.7 },
      { x: 173.6, y: 453.7 },
      { x: 183.8, y: 453.7 },
      { x: 197.5, y: 453.7 },
      { x: 207.7, y: 453.7 },
      { x: 224.8, y: 446.9 },
      { x: 235, y: 436.6 },
      { x: 252.1, y: 423 },
      { x: 272.6, y: 409.3 },
      { x: 276, y: 405.9 },
      { x: 282.8, y: 405.9 },
      { x: 286.2, y: 409.3 },
      { x: 289.7, y: 416.2 },
      { x: 289.7, y: 433.2 },
      { x: 289.7, y: 446.9 },
      { x: 289.7, y: 467.4 },
      { x: 289.7, y: 484.4 },
      { x: 286.2, y: 508.3 },
      { x: 286.2, y: 518.6 },
      { x: 286.2, y: 535.6 },
      { x: 286.2, y: 545.9 },
      { x: 286.2, y: 562.9 },
      { x: 286.2, y: 573.2 },
      { x: 286.2, y: 580 },
      { x: 289.7, y: 583.4 },
      { x: 293.1, y: 586.8 },
      { x: 303.3, y: 590.2 },
      { x: 320.4, y: 603.9 },
      { x: 334, y: 617.5 },
      { x: 351.1, y: 627.8 },
      { x: 357.9, y: 634.6 },
      { x: 357.9, y: 638 },
      { x: 357.9, y: 641.4 },
      { x: 361.3, y: 648.3 },
      { x: 361.3, y: 651.7 },
      { x: 361.3, y: 658.5 },
      { x: 361.3, y: 665.3 },
      { x: 361.3, y: 675.6 },
      { x: 361.3, y: 685.8 },
      { x: 351.1, y: 702.9 },
      { x: 337.4, y: 713.1 },
      { x: 313.5, y: 726.8 },
      { x: 282.8, y: 743.8 },
      { x: 252.1, y: 760.9 },
      { x: 228.2, y: 778 },
      { x: 214.6, y: 788.2 },
    ];
    assertNotMatches('这', 4, points);
    assertMatches('这', 5, points);
    assertNotMatches('这', 6, points);
  });

  it('matches using real data 20', () => {
    const points = [
      { x: 483, y: 431.8 },
      { x: 472.7, y: 459.1 },
      { x: 462.5, y: 476.2 },
    ];
    assertNotMatches('您', 4, points);
    assertMatches('您', 5, points);
    assertNotMatches('您', 6, points);
  });

  it('matches using real data 21', () => {
    const points = [
      { x: 184.1, y: 365.3 },
      { x: 214.8, y: 355 },
      { x: 320.6, y: 324.3 },
      { x: 371.8, y: 303.8 },
      { x: 375.2, y: 300.4 },
    ];
    assertNotMatches('吗', 0, points);
    assertNotMatches('吗', 1, points);
    assertNotMatches('吗', 2, points);
  });

  it('matches using real data 22', () => {
    const points = [
      { x: 496.6, y: 344.6 },
      { x: 500.1, y: 348.1 },
      { x: 513.7, y: 341.2 },
      { x: 534.2, y: 331 },
      { x: 551.3, y: 324.2 },
      { x: 571.7, y: 313.9 },
      { x: 592.2, y: 310.5 },
      { x: 609.3, y: 307.1 },
      { x: 633.2, y: 296.9 },
      { x: 640, y: 296.9 },
      { x: 643.4, y: 296.9 },
    ];
    assertNotMatches('得', 5, points);
    assertMatches('得', 5, points, { leniency: 2 });
    assertMatches('得', 6, points);
  });

  it('matches using real data 23', () => {
    const points = [
      { x: 500.6, y: 275.9 },
      { x: 500.6, y: 275.9 },
      { x: 500.6, y: 287.3 },
      { x: 492.1, y: 301.5 },
      { x: 480.7, y: 321.4 },
      { x: 466.5, y: 344.2 },
      { x: 452.3, y: 369.8 },
      { x: 429.5, y: 406.8 },
      { x: 415.3, y: 429.5 },
      { x: 403.9, y: 455.1 },
      { x: 389.7, y: 475 },
      { x: 378.3, y: 494.9 },
      { x: 369.8, y: 509.2 },
      { x: 361.2, y: 526.2 },
      { x: 349.9, y: 540.4 },
      { x: 341.3, y: 557.5 },
      { x: 332.8, y: 574.6 },
      { x: 324.3, y: 586 },
      { x: 318.6, y: 597.3 },
      { x: 310, y: 611.6 },
      { x: 301.5, y: 622.9 },
      { x: 293, y: 634.3 },
      { x: 287.3, y: 648.5 },
      { x: 281.6, y: 659.9 },
      { x: 273.1, y: 668.4 },
      { x: 270.2, y: 677 },
      { x: 264.5, y: 685.5 },
      { x: 261.7, y: 691.2 },
      { x: 258.8, y: 696.9 },
      { x: 256, y: 702.6 },
      { x: 253.2, y: 705.4 },
      { x: 253.2, y: 708.3 },
      { x: 253.2, y: 708.3 },
      { x: 253.2, y: 708.3 },
      { x: 253.2, y: 708.3 },
      { x: 253.2, y: 708.3 },
      { x: 253.2, y: 708.3 },
      { x: 258.8, y: 705.4 },
      { x: 264.5, y: 705.4 },
      { x: 273.1, y: 705.4 },
      { x: 287.3, y: 705.4 },
      { x: 301.5, y: 705.4 },
      { x: 315.7, y: 702.6 },
      { x: 332.8, y: 702.6 },
      { x: 349.9, y: 702.6 },
      { x: 364.1, y: 699.7 },
      { x: 378.3, y: 699.7 },
      { x: 392.5, y: 696.9 },
      { x: 403.9, y: 694 },
      { x: 415.3, y: 691.2 },
      { x: 426.7, y: 688.4 },
      { x: 435.2, y: 688.4 },
      { x: 449.4, y: 685.5 },
      { x: 460.8, y: 682.7 },
      { x: 472.2, y: 682.7 },
      { x: 489.2, y: 677 },
      { x: 497.8, y: 674.1 },
      { x: 506.3, y: 671.3 },
      { x: 514.8, y: 671.3 },
      { x: 523.4, y: 668.4 },
      { x: 531.9, y: 665.6 },
      { x: 540.4, y: 662.8 },
      { x: 549, y: 659.9 },
      { x: 563.2, y: 651.4 },
      { x: 571.7, y: 645.7 },
      { x: 583.1, y: 640 },
      { x: 591.6, y: 637.2 },
      { x: 600.2, y: 631.5 },
      { x: 611.6, y: 622.9 },
      { x: 620.1, y: 620.1 },
      { x: 628.6, y: 614.4 },
      { x: 637.2, y: 605.9 },
      { x: 645.7, y: 600.2 },
      { x: 654.2, y: 594.5 },
      { x: 659.9, y: 586 },
      { x: 665.6, y: 580.3 },
      { x: 674.1, y: 571.7 },
      { x: 679.8, y: 568.9 },
      { x: 682.7, y: 563.2 },
      { x: 688.4, y: 557.5 },
      { x: 691.2, y: 554.7 },
      { x: 694, y: 551.8 },
      { x: 696.9, y: 549 },
      { x: 699.7, y: 546.1 },
      { x: 702.6, y: 546.1 },
      { x: 702.6, y: 546.1 },
    ];
    assertMatches('厶', 0, points);
  });

  it('matches using real data 24', () => {
    const points = [
      { x: 708.3, y: 150.8 },
      { x: 711.1, y: 150.8 },
      { x: 714, y: 150.8 },
      { x: 716.8, y: 150.8 },
      { x: 733.9, y: 150.8 },
      { x: 745.2, y: 150.8 },
      { x: 779.4, y: 150.8 },
      { x: 807.8, y: 147.9 },
      { x: 836.3, y: 145.1 },
      { x: 861.9, y: 142.2 },
      { x: 887.5, y: 142.2 },
      { x: 913.1, y: 139.4 },
      { x: 927.3, y: 139.4 },
      { x: 944.4, y: 139.4 },
      { x: 958.6, y: 139.4 },
      { x: 981.3, y: 136.5 },
      { x: 995.6, y: 136.5 },
      { x: 1006.9, y: 136.5 },
      { x: 1012.6, y: 136.5 },
      { x: 1018.3, y: 136.5 },
      { x: 1021.2, y: 136.5 },
      { x: 1021.2, y: 136.5 },
      { x: 1024, y: 139.4 },
      { x: 1024, y: 139.4 },
      { x: 1024, y: 142.2 },
      { x: 1024, y: 145.1 },
      { x: 1024, y: 150.8 },
      { x: 1024, y: 153.6 },
      { x: 1021.2, y: 162.1 },
      { x: 1015.5, y: 170.7 },
      { x: 1006.9, y: 190.6 },
      { x: 992.7, y: 219 },
      { x: 975.6, y: 247.5 },
      { x: 961.4, y: 278.8 },
      { x: 944.4, y: 307.2 },
      { x: 924.4, y: 349.9 },
      { x: 915.9, y: 364.1 },
      { x: 901.7, y: 395.4 },
      { x: 896, y: 412.4 },
      { x: 887.5, y: 429.5 },
      { x: 881.8, y: 440.9 },
      { x: 876.1, y: 455.1 },
      { x: 870.4, y: 463.6 },
      { x: 864.7, y: 472.2 },
      { x: 861.9, y: 477.9 },
      { x: 861.9, y: 480.7 },
      { x: 859, y: 483.6 },
      { x: 859, y: 486.4 },
      { x: 859, y: 486.4 },
      { x: 859, y: 489.2 },
      { x: 859, y: 489.2 },
      { x: 859, y: 494.9 },
      { x: 859, y: 503.5 },
      { x: 859, y: 509.2 },
      { x: 859, y: 517.7 },
      { x: 859, y: 520.5 },
      { x: 859, y: 523.4 },
      { x: 859, y: 526.2 },
      { x: 859, y: 526.2 },
      { x: 859, y: 529.1 },
      { x: 856.2, y: 529.1 },
    ];
    assertNotMatches('那', 4, points);
  });

  it('matches using real data 25', () => {
    const points = [
      { x: 662.8, y: 173.5 },
      { x: 662.8, y: 173.5 },
      { x: 668.4, y: 173.5 },
      { x: 699.7, y: 170.7 },
      { x: 708.3, y: 170.7 },
      { x: 731, y: 167.8 },
      { x: 762.3, y: 162.1 },
      { x: 787.9, y: 159.3 },
      { x: 816.4, y: 156.4 },
      { x: 839.1, y: 153.6 },
      { x: 856.2, y: 150.8 },
      { x: 876.1, y: 150.8 },
      { x: 890.3, y: 150.8 },
      { x: 904.5, y: 150.8 },
      { x: 910.2, y: 150.8 },
      { x: 913.1, y: 150.8 },
      { x: 915.9, y: 150.8 },
      { x: 915.9, y: 150.8 },
      { x: 918.8, y: 150.8 },
      { x: 918.8, y: 153.6 },
      { x: 918.8, y: 153.6 },
      { x: 921.6, y: 153.6 },
      { x: 921.6, y: 153.6 },
      { x: 924.4, y: 153.6 },
      { x: 924.4, y: 153.6 },
      { x: 927.3, y: 153.6 },
      { x: 927.3, y: 156.4 },
      { x: 930.1, y: 156.4 },
      { x: 930.1, y: 162.1 },
      { x: 930.1, y: 165 },
      { x: 930.1, y: 170.7 },
      { x: 927.3, y: 173.5 },
      { x: 924.4, y: 179.2 },
      { x: 918.8, y: 184.9 },
      { x: 907.4, y: 196.3 },
      { x: 896, y: 210.5 },
      { x: 881.8, y: 224.7 },
      { x: 864.7, y: 238.9 },
      { x: 853.3, y: 250.3 },
      { x: 839.1, y: 264.5 },
      { x: 824.9, y: 275.9 },
      { x: 816.4, y: 284.4 },
      { x: 807.8, y: 293 },
      { x: 802.1, y: 298.7 },
      { x: 793.6, y: 307.2 },
      { x: 790.8, y: 307.2 },
      { x: 787.9, y: 310 },
      { x: 785.1, y: 312.9 },
      { x: 785.1, y: 312.9 },
      { x: 785.1, y: 312.9 },
      { x: 785.1, y: 312.9 },
      { x: 785.1, y: 312.9 },
      { x: 787.9, y: 312.9 },
      { x: 787.9, y: 312.9 },
      { x: 793.6, y: 312.9 },
      { x: 796.4, y: 312.9 },
      { x: 807.8, y: 315.7 },
      { x: 819.2, y: 324.3 },
      { x: 836.3, y: 335.6 },
      { x: 853.3, y: 347 },
      { x: 864.7, y: 358.4 },
      { x: 884.6, y: 372.6 },
      { x: 893.2, y: 378.3 },
      { x: 898.8, y: 386.8 },
      { x: 904.5, y: 392.5 },
      { x: 910.2, y: 398.2 },
      { x: 915.9, y: 403.9 },
      { x: 915.9, y: 409.6 },
      { x: 918.8, y: 415.3 },
      { x: 921.6, y: 418.1 },
      { x: 921.6, y: 421 },
      { x: 921.6, y: 423.8 },
      { x: 921.6, y: 426.7 },
      { x: 921.6, y: 432.4 },
      { x: 921.6, y: 438 },
      { x: 921.6, y: 443.7 },
      { x: 918.8, y: 455.1 },
      { x: 915.9, y: 469.3 },
      { x: 910.2, y: 486.4 },
      { x: 907.4, y: 506.3 },
      { x: 898.8, y: 523.4 },
      { x: 893.2, y: 543.3 },
      { x: 887.5, y: 557.5 },
      { x: 881.8, y: 574.6 },
      { x: 876.1, y: 586 },
      { x: 870.4, y: 594.5 },
      { x: 867.6, y: 600.2 },
      { x: 864.7, y: 605.9 },
      { x: 861.9, y: 611.6 },
      { x: 859, y: 614.4 },
      { x: 856.2, y: 620.1 },
      { x: 853.3, y: 628.6 },
      { x: 850.5, y: 631.5 },
      { x: 850.5, y: 631.5 },
      { x: 850.5, y: 634.3 },
      { x: 847.6, y: 634.3 },
      { x: 847.6, y: 634.3 },
      { x: 847.6, y: 634.3 },
      { x: 844.8, y: 634.3 },
      { x: 836.3, y: 634.3 },
      { x: 822, y: 631.5 },
      { x: 796.4, y: 625.8 },
      { x: 782.2, y: 622.9 },
      { x: 773.7, y: 620.1 },
      { x: 768, y: 617.2 },
      { x: 765.2, y: 614.4 },
      { x: 765.2, y: 611.6 },
    ];
    assertMatches('那', 4, points);
  });

  it('matches using real data 26', () => {
    const points = [
      { x: 674.1, y: 150.8 },
      { x: 674.1, y: 150.8 },
      { x: 677, y: 150.8 },
      { x: 685.5, y: 150.8 },
      { x: 699.7, y: 150.8 },
      { x: 722.5, y: 150.8 },
      { x: 753.8, y: 150.8 },
      { x: 785.1, y: 150.8 },
      { x: 810.7, y: 150.8 },
      { x: 836.3, y: 153.6 },
      { x: 847.6, y: 159.3 },
      { x: 861.9, y: 165 },
      { x: 876.1, y: 176.4 },
      { x: 887.5, y: 184.9 },
      { x: 896, y: 196.3 },
      { x: 907.4, y: 207.6 },
      { x: 913.1, y: 216.2 },
      { x: 927.3, y: 236.1 },
      { x: 935.8, y: 250.3 },
      { x: 941.5, y: 267.4 },
      { x: 950, y: 284.4 },
      { x: 958.6, y: 301.5 },
      { x: 961.4, y: 315.7 },
      { x: 967.1, y: 335.6 },
      { x: 970, y: 361.2 },
      { x: 972.8, y: 381.2 },
      { x: 972.8, y: 403.9 },
      { x: 964.3, y: 440.9 },
      { x: 952.9, y: 466.5 },
      { x: 944.4, y: 492.1 },
      { x: 933, y: 517.7 },
      { x: 918.8, y: 543.3 },
      { x: 910.2, y: 566 },
      { x: 901.7, y: 583.1 },
      { x: 890.3, y: 603 },
      { x: 884.6, y: 617.2 },
      { x: 876.1, y: 631.5 },
      { x: 873.2, y: 640 },
      { x: 861.9, y: 648.5 },
      { x: 850.5, y: 651.4 },
    ];
    assertNotMatches('那', 4, points);
  });

  it('matches using real data 27', () => {
    const points = [
      { x: 455.1, y: 219 },
      { x: 455.1, y: 216.2 },
      { x: 458, y: 216.2 },
      { x: 463.6, y: 216.2 },
      { x: 483.6, y: 216.2 },
      { x: 503.5, y: 216.2 },
      { x: 531.9, y: 213.3 },
      { x: 563.2, y: 213.3 },
      { x: 594.5, y: 210.5 },
      { x: 620.1, y: 207.6 },
      { x: 637.2, y: 207.6 },
      { x: 648.5, y: 207.6 },
      { x: 657.1, y: 207.6 },
      { x: 662.8, y: 207.6 },
      { x: 662.8, y: 207.6 },
      { x: 665.6, y: 207.6 },
      { x: 665.6, y: 210.5 },
      { x: 665.6, y: 216.2 },
      { x: 665.6, y: 221.9 },
      { x: 665.6, y: 230.4 },
      { x: 665.6, y: 238.9 },
      { x: 662.8, y: 256 },
      { x: 659.9, y: 273.1 },
      { x: 648.5, y: 310 },
      { x: 640, y: 330 },
      { x: 634.3, y: 349.9 },
      { x: 628.6, y: 364.1 },
      { x: 622.9, y: 372.6 },
      { x: 620.1, y: 378.3 },
      { x: 617.2, y: 384 },
      { x: 617.2, y: 386.8 },
      { x: 617.2, y: 389.7 },
      { x: 617.2, y: 389.7 },
      { x: 622.9, y: 392.5 },
      { x: 628.6, y: 398.2 },
      { x: 637.2, y: 401.1 },
      { x: 642.8, y: 406.8 },
      { x: 645.7, y: 412.4 },
      { x: 648.5, y: 415.3 },
      { x: 651.4, y: 423.8 },
      { x: 651.4, y: 435.2 },
      { x: 654.2, y: 449.4 },
      { x: 654.2, y: 469.3 },
      { x: 654.2, y: 489.2 },
      { x: 648.5, y: 506.3 },
      { x: 640, y: 520.5 },
      { x: 625.8, y: 534.8 },
      { x: 597.3, y: 557.5 },
      { x: 571.7, y: 571.7 },
      { x: 551.8, y: 577.4 },
      { x: 531.9, y: 583.1 },
      { x: 526.2, y: 586 },
    ];
    assertMatches('阝', 0, points);
    assertNotMatches('阝', 1, points);
  });

  it('matches using real data 28', () => {
    const points = [
      { x: 494.9, y: 173.5 },
      { x: 497.8, y: 173.5 },
      { x: 509.2, y: 173.5 },
      { x: 537.6, y: 173.5 },
      { x: 583.1, y: 173.5 },
      { x: 620.1, y: 173.5 },
      { x: 654.2, y: 179.2 },
      { x: 671.3, y: 184.9 },
      { x: 682.7, y: 193.4 },
      { x: 688.4, y: 204.8 },
      { x: 688.4, y: 213.3 },
      { x: 671.3, y: 238.9 },
      { x: 654.2, y: 258.8 },
      { x: 628.6, y: 287.3 },
      { x: 617.2, y: 304.4 },
      { x: 605.9, y: 315.7 },
      { x: 600.2, y: 321.4 },
      { x: 600.2, y: 321.4 },
      { x: 600.2, y: 321.4 },
      { x: 605.9, y: 324.3 },
      { x: 617.2, y: 330 },
      { x: 625.8, y: 338.5 },
      { x: 637.2, y: 352.7 },
      { x: 648.5, y: 369.8 },
      { x: 657.1, y: 384 },
      { x: 665.6, y: 403.9 },
      { x: 668.4, y: 429.5 },
      { x: 668.4, y: 460.8 },
      { x: 648.5, y: 497.8 },
      { x: 617.2, y: 531.9 },
      { x: 583.1, y: 557.5 },
      { x: 546.1, y: 580.3 },
      { x: 526.2, y: 588.8 },
    ];
    assertMatches('阝', 0, points);
    assertNotMatches('阝', 1, points);
  });
});
